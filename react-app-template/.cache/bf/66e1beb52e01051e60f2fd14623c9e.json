{"id":"../node_modules/react-use-websocket/dist/lib/globals.js","dependencies":[{"name":"/home/sengul/Documents/Projects/Ltc/3dMDWebsocket/react-app-template/node_modules/react-use-websocket/dist/lib/globals.js.map","includedInParent":true,"mtime":1679124831164},{"name":"/home/sengul/Documents/Projects/Ltc/3dMDWebsocket/react-app-template/node_modules/react-use-websocket/src/lib/globals.ts","includedInParent":true,"mtime":1679124831176},{"name":"/home/sengul/Documents/Projects/Ltc/3dMDWebsocket/react-app-template/package.json","includedInParent":true,"mtime":1679124831384},{"name":"/home/sengul/Documents/Projects/Ltc/3dMDWebsocket/react-app-template/.babelrc","includedInParent":true,"mtime":1637703918124},{"name":"/home/sengul/Documents/Projects/Ltc/3dMDWebsocket/react-app-template/node_modules/react-use-websocket/package.json","includedInParent":true,"mtime":1679124831164}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resetWebSockets = exports.sharedWebSockets = void 0;\nexports.sharedWebSockets = {};\nexports.resetWebSockets = function (url) {\n    if (url && exports.sharedWebSockets.hasOwnProperty(url)) {\n        delete exports.sharedWebSockets[url];\n    }\n    else {\n        for (var url_1 in exports.sharedWebSockets) {\n            if (exports.sharedWebSockets.hasOwnProperty(url_1)) {\n                delete exports.sharedWebSockets[url_1];\n            }\n        }\n    }\n};\n","map":{"version":3,"file":"globals.js","sourceRoot":"","sources":["../../src/lib/globals.ts"],"names":[],"mappings":";;;AAMa,QAAA,gBAAgB,GAAqB,EAAE,CAAC;AAExC,QAAA,eAAe,GAAG,UAAC,GAAY;IAC1C,IAAI,GAAG,IAAI,wBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC/C,OAAO,wBAAgB,CAAC,GAAG,CAAC,CAAC;KAC9B;SAAM;QACL,KAAK,IAAI,KAAG,IAAI,wBAAgB,EAAC;YAC/B,IAAI,wBAAgB,CAAC,cAAc,CAAC,KAAG,CAAC,EAAC;gBACvC,OAAO,wBAAgB,CAAC,KAAG,CAAC,CAAC;aAC9B;SACF;KACF;AACH,CAAC,CAAA","sourcesContent":["import { WebSocketLike } from \"./types\";\n\nexport interface SharedWebSockets {\n  [url: string]: WebSocketLike;\n}\n\nexport const sharedWebSockets: SharedWebSockets = {};\n\nexport const resetWebSockets = (url?: string): void => {\n  if (url && sharedWebSockets.hasOwnProperty(url)) {\n    delete sharedWebSockets[url];\n  } else {\n    for (let url in sharedWebSockets){\n      if (sharedWebSockets.hasOwnProperty(url)){\n        delete sharedWebSockets[url];\n      }\n    }\n  }\n}\n"]}},"hash":"6fbbb9f9fe8e86220e7f638f55a1530b","cacheData":{"env":{}}}